class MoneyBox:
    def __init__(self, capacity):
        # конструктор с аргументом – вместимость копилки
        self.max_cap = capacity
        self.cur_cap = 0

    def can_add(self, v):
        # True, если можно добавить v монет, False иначе
        if self.cur_cap + v <= self.max_cap:
            return True
        return False

    def add(self, v):
        # положить v монет в копилку
        self.cur_cap += v

    
'''
Реализуйте класс MoneyBox, для работы с виртуальной копилкой.
Каждая копилка имеет ограниченную вместимость, которая выражается
 целым числом – количеством монет, которые можно положить в 
 копилку. Класс должен поддерживать информацию о количестве 
 монет в копилке, предоставлять возможность добавлять монеты в 
 копилку и узнавать, можно ли добавить в копилку ещё какое-то 
 количество монет, не превышая ее вместимость.
При создании копилки, число монет в ней равно 0.
Примечание:
Гарантируется, что метод add(self, v) будет вызываться только 
если can_add(self, v) – True.
'''